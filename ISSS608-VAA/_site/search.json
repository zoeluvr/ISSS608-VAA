[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "",
    "text": "pacman::p_load(patchwork, ggthemes, hrbrthemes, ggrepel, tidyverse)\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x = MATHS,\n       y = ENGLISH)) +\n  geom_point() + \n  geom_smooth(method = lm,\n              linewidth = 0.5) +\n  geom_label_repel(aes(label = ID),\n             fontface = \"bold\") +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  theme_gray() + \n  ggtitle(\"English scores versus Maths scores for primary 3\")\n\n\np2 <- ggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 10,\n                 boundary = 100,\n                 color = \"grey25\",\n                 fill = \"yellow2\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 10,\n              grid = \"Y\")\n  ggtitle(\"Distribution of Maths scores\")\n\n$title\n[1] \"Distribution of Maths scores\"\n\nattr(,\"class\")\n[1] \"labels\"\n\n\n\np3 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\npatchwork <- (p2/p3)|p1 +\n  plot_annotation(tag_levels = 'All Graphs')\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 320 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\np1 + inset_element(p3,\n                   left = 0.02,\n                   bottom = 0.7,\n                   right = 0.5,\n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses P_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to Zoeluv’s Visual Analytics and Application. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Self_Ex/pyramid/Self_Ex_Pyramid.html",
    "href": "Self_Ex/pyramid/Self_Ex_Pyramid.html",
    "title": "Self_Ex_Pyramid",
    "section": "",
    "text": "pacman::p_load(tidyverse, patchwork, ggthemes, hrbrthemes, ggrepel, dplyr) \n\n\n# read csv file\npop <- read_csv(\"data/respopagesextod2022.csv\")\n\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(pop)\n\n# A tibble: 6 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  <chr>      <chr>                  <chr>  <chr> <chr>               <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2022\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats       10  2022\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       10  2022\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    30  2022\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2022\n6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and O…    50  2022\n\n\n\nfilter_pop <- pop[which((pop$PA == 'Ang Mo Kio') | (pop$PA == 'Bedok') | (pop$PA == 'Bishan') | (pop$PA == 'Clementi') | (pop$PA == 'Downtown Core') | (pop$PA == 'Geylang') | (pop$PA == 'Outram') | (pop$PA == 'Hougang') | (pop$PA == 'Woodlands')),]\nhead(filter_pop)\n\n# A tibble: 6 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  <chr>      <chr>                  <chr>  <chr> <chr>               <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2022\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats       10  2022\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       10  2022\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    30  2022\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2022\n6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and O…    50  2022\n\n\n\nfreq_pop <- filter_pop %>%\n  group_by(`AG`, `Sex`, `PA`) %>%\n  summarise('Count'= sum(`Pop`)) %>%\n  ungroup()\n\n`summarise()` has grouped output by 'AG', 'Sex'. You can override using the\n`.groups` argument.\n\nhead(freq_pop)\n\n# A tibble: 6 × 4\n  AG     Sex     PA            Count\n  <chr>  <chr>   <chr>         <dbl>\n1 0_to_4 Females Ang Mo Kio     2480\n2 0_to_4 Females Bedok          4970\n3 0_to_4 Females Bishan         1320\n4 0_to_4 Females Clementi       1740\n5 0_to_4 Females Downtown Core   100\n6 0_to_4 Females Geylang        1850\n\n\n\norder <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\nsorted_pop <- freq_pop %>%\n  mutate(AG =  factor(AG, levels = order)) %>%\n  arrange(AG)\n\nhead(sorted_pop)\n\n# A tibble: 6 × 4\n  AG     Sex     PA            Count\n  <fct>  <chr>   <chr>         <dbl>\n1 0_to_4 Females Ang Mo Kio     2480\n2 0_to_4 Females Bedok          4970\n3 0_to_4 Females Bishan         1320\n4 0_to_4 Females Clementi       1740\n5 0_to_4 Females Downtown Core   100\n6 0_to_4 Females Geylang        1850\n\n\n\np <- ggplot(sorted_pop, aes(x = ifelse(Sex == \"Males\", yes = -Count, no = Count), y = AG, fill = Sex)) + geom_col() + facet_wrap(~PA, nrow = 3) + scale_x_continuous(breaks = c(-10000, -5000, 0, 5000, 10000), labels = paste0(c(10, 5, 0, 5, 10),\"k\")) + labs (x = \"Population\", y = \"Age\", title='Hougang Age-Sex Population Pyramid 2022') +\n  theme_bw() + theme(plot.title = element_text(size=12,hjust=0.5)) +\n  theme(axis.ticks.y = element_blank()) + theme(axis.title.y = element_text(size =  0.1 )) + scale_fill_manual(values = c(\"Males\" = \"dodgerblue3\", \"Females\" = \"brown3\"))\np"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "No.\nStep\nScreenshot\n\n\n\n\n1.\nUpload the original file respopagesextod2022.csv into the tableau and rename the table header.\n\n\n\n2.\nOpen Sheet 1. To make a 3*3 trellis diagram, first create a calculated field of index, then add the number of columns as a parameter and set current value as 3.\n \n\n\n3.\nCreate the calculated fields “Columns” and “Rows”. Write “IF [index] % [# of Columns] = 0 THEN [# of Columns] ELSE [index] % [# of Columns] END” and “INT(INT([index]-1)/[# of Columns])” in the description of columns and rows respectively.\n \n\n\n4.\nPut “Planning Area” in the columns and add “Columns” and “Rows” in text to see if the area is put in a group of three. After the examination, drag them back.\n\n\n\n5.\nTo separate the population into that of female and male, create a calculated field by using “IIF([Sex]=”Males/Females”,[Population],0)“. Choose”Males” and “Females” in [Sex] part respectively.\n\n\n\n6.\nDrag “Planning Area” to the detail section under the “Mark” and put it in the filter to show different areas. Click “Columns” and “Rows” and choose “Compute Using Planning Area”\n\n\n\n7.\nPut “SUM(Female)” and “SUM(Male)” under Columns and “Age Group” under Rows.\n\n\n\n8.\nRight-click the Male axis and choose “Edit Axis”, then tick the “Reversed” under the “Scope”. After that, nine age-sex pyramids are created.\n\n\n\n9.\nTo adjust pyramids’ positions according to their locations (north, south, north-east etc.), right-click the “Planning Area” under the filter and select sort, then the preferable positions can be set manually.\n\n\n\n10.\nClick the arrow besides the Age Group row and select the “Data source order”, sorting in descending.\n\n\n\n11.\nTo hide the number under the rows and columns, right click the number and cancel the selection of “Show Header”.\n\n\n\n12.\nClick “Format” in the tool bar and select “Font” to adjust the font size.\n\n\n\n13.\nRight-click the a specific pyramid and select “Area..” under “Annotate” to add the label manually.\n\n\n\n14.\nThen the age-sex pyramid trellis is completed."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#major-observations",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#major-observations",
    "title": "Take-home_Ex01",
    "section": "Major Observations",
    "text": "Major Observations\nNine areas are selected according to their geometric locations, which are, to be specific, north region, south region, central region, west region, east region, north-west region, north-east region, south-west region, and south-east region. Since the statistics only contain an extremely small population size in some border areas in Singapore (for example, Changi, western islands etc.), the analysis does not take these places into consideration.\nIn general, the age-sex pyramids of all these nine regions show a similar trend that is wide in the middle and narrow at two sides, which can be explained by the data that people in middle age (25-69) are for the major part, and the elderly and the young child account for a relatively small proportion. Meanwhile, it can also be achieved that the population of each gender is near and show similar age distribution. Another issue that needs to be paid attention to is that all these population pyramids are in the constrictive type, which is a common feature of the developed country, representing that the population aging is quite serious, which might be a potential threat to future development.\nAs for each separate region, it is evident that the population of the eastern and western part are higher compared with the central part. This may be caused by central part’s role as a main metropolitan region, where a large number a companies and shopping complexes situate there but less living quarters. Few residences are built here and the existing houses are expensive, therefore the population here is relatively small compared with other regions.\nAnother interesting thing is that the young population of the northern part (Punggol) is much higher than that of the elderly. Its population mainly lies between 30 and 49 years old. This is probably because north Singapore is the newly-built digital distinct, and has many new technology firms, thus providing numerous opportunities for people at relatively young ages, resulting in their accumulation.\nIn summary, the population of Singapore mainly shows a constructive trend, and the aging problem is quite severe. To solve this problem, Singapore government may need to promote policies to encourage births and welcome high quality work forces from other countries."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02(1).html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02(1).html",
    "title": "Take-home Exercise2",
    "section": "",
    "text": "Take-home exercise 2 is based on the take-home exercise 1 submission made by a classmate. Assessment of peer work will be given in terms of clarity and aesthetics, and the original work will be remade by using the data visualization skills learnt in Lesson 1 and 2.\nThe trellis in take-home exercise is created by Tableau, and in this part, R and appropriate R packages will be adopted to provide alternative solutions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02(1).html#single-pyramid",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02(1).html#single-pyramid",
    "title": "Take-home Exercise2",
    "section": "3.1 Single Pyramid",
    "text": "3.1 Single Pyramid\nAs there are 9 age-sex pyramids in the same structure, here the pyramid of Hougang is selected as an example.\n\n\n\nOriginal Hougang\n\n\n\n3.1.1 Critique\nClarity:\n\nThe graph is acceptable in terms of the general layout, as the number of female and male in Hougang is displayed. Looking at the graph, audience are able to grasp the major age and gender group in Hougang.\nY-axis label ‘AG’ is vague, and the use of an abbreviation may not be appropriate for a label. The height of the Y-axis can be adjusted since too much information overlap together.\nX-axis does not mention what is ‘female’ and ‘male’ refer to. In some circumstances, age-sex pyramids may also adopt the percentage in X-axis, therefore more specific information should be given.\nThe setting of the number label lacks a pattern. The author labels the extremely high and low numbers, but because of the inappropriate size of the number and the bar, it is hard for the audience to identify which bar the number indicates. Since the age-sex pyramid mainly focuses on the distribution trend and not the exact number, the specific number label can be removed.\n\nAesthetics:\n\nThe height and width of the graph are a little unbalanced.\nColors chosen show a contrast of different gender and are readable to the audience.\nClear white background avoids distractions.\n\n\n\n3.1.2 Remake\nBased on the problems mentioned above, a single age-sex pyramid is remade. (step-by-step methods will be given in the remake of the trellis)\n\nfilter_pop_0 <- pop[which((pop$PA == 'Hougang')),]\nhead(filter_pop_0)\n\n# A tibble: 6 × 7\n  PA      SZ                   AG     Sex   TOD                        Pop  Time\n  <chr>   <chr>                <chr>  <chr> <chr>                    <dbl> <dbl>\n1 Hougang Defu Industrial Park 0_to_4 Males HDB 1- and 2-Room Flats      0  2022\n2 Hougang Defu Industrial Park 0_to_4 Males HDB 3-Room Flats             0  2022\n3 Hougang Defu Industrial Park 0_to_4 Males HDB 4-Room Flats             0  2022\n4 Hougang Defu Industrial Park 0_to_4 Males HDB 5-Room and Executiv…     0  2022\n5 Hougang Defu Industrial Park 0_to_4 Males HUDC Flats (excluding t…     0  2022\n6 Hougang Defu Industrial Park 0_to_4 Males Condominiums and Other …     0  2022\n\nfreq_pop_0 <- filter_pop_0 %>%\n  group_by(`AG`, `Sex`, `PA`) %>%\n  summarise('Count'= sum(`Pop`)) %>%\n  ungroup()\nhead(freq_pop_0)\n\n# A tibble: 6 × 4\n  AG       Sex     PA      Count\n  <chr>    <chr>   <chr>   <dbl>\n1 0_to_4   Females Hougang  4430\n2 0_to_4   Males   Hougang  4520\n3 10_to_14 Females Hougang  4920\n4 10_to_14 Males   Hougang  4910\n5 15_to_19 Females Hougang  5190\n6 15_to_19 Males   Hougang  5410\n\norder <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\nsorted_pop_0 <- freq_pop_0 %>%\n  mutate(AG =  factor(AG, levels = order)) %>%\n  arrange(AG)\n\nhead(sorted_pop_0)\n\n# A tibble: 6 × 4\n  AG       Sex     PA      Count\n  <fct>    <chr>   <chr>   <dbl>\n1 0_to_4   Females Hougang  4430\n2 0_to_4   Males   Hougang  4520\n3 5_to_9   Females Hougang  4960\n4 5_to_9   Males   Hougang  4880\n5 10_to_14 Females Hougang  4920\n6 10_to_14 Males   Hougang  4910\n\np0 <- ggplot(sorted_pop_0, aes(x = ifelse(Sex == \"Males\", yes = -Count, no = Count), y = AG, fill = Sex)) + geom_col() + scale_x_continuous(breaks = c(-10000, -5000, 0, 5000, 10000), labels = paste0(c(10, 5, 0, 5, 10),\"k\")) + labs (x = \"Population\", y = \"Age\", title='Hougang Age-Sex Population Pyramid 2022') +\n  theme_bw() + theme(plot.title = element_text(size=12,hjust=0.5)) +\n  theme(axis.ticks.y = element_blank()) + scale_fill_manual(values = c(\"Males\" = \"dodgerblue3\", \"Females\" = \"brown3\")) \np0"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02(1).html#trellis-of-pyramids",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02(1).html#trellis-of-pyramids",
    "title": "Take-home Exercise2",
    "section": "3.2 Trellis of Pyramids",
    "text": "3.2 Trellis of Pyramids\n\n3.2.1 Critic\nThe original trellis is listed blow. \nClarity:\n\nAdopt a 3*3 trellis, which leaves adequate space to show data in detail. Since the graph is not compressed in the horizon, the population distribution is clearly shown to the audience.\nToo much repetition of “Age-sex Pyramid” in the titles, and there is no need to present “Trellis Display” in the main title as the structure can be seen from the chart.\n\nAesthetics:\n\nY-axis are redundant and can be combined and put in the leftmost column.\nThe sizes of the bars are inconsistent (e.g. the bars of Hougang and Woodlands are thinner than others).\n\n\n\n3.2.2 Proposed Design\nA scratch of improved design is shown below to avoid redundancy in the trellis. \n\n\n3.2.3 Remake\nIn this part, steps will be given to show how to make an age-sex pyramid trellis by using RStudio.\nFilter out desired areas\nAs the csv.file has already been uploaded under the R environment and renamed as “pop”, the filter command is then adopted to filter out the needed areas. Here the areas include: Ang Mo Kio, Bedok, Bishan, Clementi, Downtown Core, Geylang, Outram, Hougang, and Woodlands. After selecting, this data set is renamed as “filter pop”.\n\nfilter_pop <- pop[which((pop$PA == 'Ang Mo Kio') | (pop$PA == 'Bedok') | (pop$PA == 'Bishan') | (pop$PA == 'Clementi') | (pop$PA == 'Downtown Core') | (pop$PA == 'Geylang') | (pop$PA == 'Outram') | (pop$PA == 'Hougang') | (pop$PA == 'Woodlands')),]\nhead(filter_pop)\n\n# A tibble: 6 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  <chr>      <chr>                  <chr>  <chr> <chr>               <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2022\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats       10  2022\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       10  2022\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    30  2022\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2022\n6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and O…    50  2022\n\n\nCompute the frequency count by age, sex, and areas\nBy using the group_by() and summarise () commands in dplyr package, the total population in Singapore in the categories of age, sex, and areas are counted.\n\nfreq_pop <- filter_pop %>%\n  group_by(`AG`, `Sex`, `PA`) %>%\n  summarise('Count'= sum(`Pop`)) %>%\n  ungroup()\nhead(freq_pop)\n\n# A tibble: 6 × 4\n  AG     Sex     PA            Count\n  <chr>  <chr>   <chr>         <dbl>\n1 0_to_4 Females Ang Mo Kio     2480\n2 0_to_4 Females Bedok          4970\n3 0_to_4 Females Bishan         1320\n4 0_to_4 Females Clementi       1740\n5 0_to_4 Females Downtown Core   100\n6 0_to_4 Females Geylang        1850\n\n\nSort age group\nSince sorting the data in age group by default could cause errors (e.g. 10_to_14 comes before 5_to_9), the sorting order of the original dataset is used by introducing arrange( ).\n\norder <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\nsorted_pop <- freq_pop %>%\n  mutate(AG =  factor(AG, levels = order)) %>%\n  arrange(AG)\n\nhead(sorted_pop)\n\n# A tibble: 6 × 4\n  AG     Sex     PA            Count\n  <fct>  <chr>   <chr>         <dbl>\n1 0_to_4 Females Ang Mo Kio     2480\n2 0_to_4 Females Bedok          4970\n3 0_to_4 Females Bishan         1320\n4 0_to_4 Females Clementi       1740\n5 0_to_4 Females Downtown Core   100\n6 0_to_4 Females Geylang        1850\n\n\nCreating trellis plot\nTo make the graphs of each area into 3*3 trellis, the facet_wrap() is used. As we want to split 9 graphs according to different regions, ~PA is put in. By adding nrow = 3 in the facet_wrap, each row is set to contain 3 age-sex pyramids.\n\np1 <- ggplot(sorted_pop, aes(x = ifelse(Sex == \"Males\", yes = -Count, no = Count), y = AG, fill = Sex)) + geom_col() + facet_wrap(~PA, nrow = 3) + scale_x_continuous(breaks = c(-10000, -5000, 0, 5000, 10000), labels = paste0(c(10, 5, 0, 5, 10),\"k\")) + labs (x = \"Population\", y = \"Age\", title='Singapore Age-Sex Population Pyramids in 9 Areas, 2022') +\n  theme_bw() + theme(plot.title = element_text(size=12,hjust=0.5)) +\n  theme(axis.ticks.y = element_blank()) + scale_fill_manual(values = c(\"Males\" = \"dodgerblue3\", \"Females\" = \"brown3\")) +\ngeom_col_interactive()\n\ngirafe(\n  ggobj = p1,\n  width_svg = 6,\n  height_svg = 7\n)\n\n\n\n\n\nThe final downloaded version is shown below:"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise2",
    "section": "",
    "text": "Take-home exercise 2 is based on the take-home exercise 1 submission made by a classmate. Assessment of peer work will be given in terms of clarity and aesthetics, and the original work will be remade by using the data visualization skills learnt in Lesson 1 and 2.\nThe trellis in take-home exercise is created by Tableau, and in this part, R and appropriate R packages will be adopted to provide alternative solutions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#single-pyramid",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#single-pyramid",
    "title": "Take-home Exercise2",
    "section": "3.1 Single Pyramid",
    "text": "3.1 Single Pyramid\nAs there are 9 age-sex pyramids in the same structure, here the pyramid of Hougang is selected as an example.\n\n\n\nOriginal Hougang\n\n\n\n3.1.1 Critique\nClarity:\n\nThe graph is acceptable in terms of the general layout, as the number of female and male in Hougang is displayed. Looking at the graph, audience are able to grasp the major age and gender group in Hougang.\nY-axis label ‘AG’ is vague, and the use of an abbreviation may not be appropriate for a label. The height of the Y-axis can be adjusted since too much information overlap together.\nX-axis does not mention what is ‘female’ and ‘male’ refer to. In some circumstances, age-sex pyramids may also adopt the percentage in X-axis, therefore more specific information should be given.\nThe setting of the number label lacks a pattern. The author labels the extremely high and low numbers, but because of the inappropriate size of the number and the bar, it is hard for the audience to identify which bar the number indicates. Since the age-sex pyramid mainly focuses on the distribution trend and not the exact number, the specific number label can be removed.\n\nAesthetics:\n\nThe height and width of the graph are a little unbalanced.\nColors chosen show a contrast of different gender and are readable to the audience.\nClear white background avoids distractions.\n\n\n\n3.1.2 Remake\nBased on the problems mentioned above, a single age-sex pyramid is remade. (step-by-step methods will be given in the remake of the trellis)\n\nfilter_pop_0 <- pop[which((pop$PA == 'Hougang')),]\nhead(filter_pop_0)\n\n# A tibble: 6 × 7\n  PA      SZ                   AG     Sex   TOD                        Pop  Time\n  <chr>   <chr>                <chr>  <chr> <chr>                    <dbl> <dbl>\n1 Hougang Defu Industrial Park 0_to_4 Males HDB 1- and 2-Room Flats      0  2022\n2 Hougang Defu Industrial Park 0_to_4 Males HDB 3-Room Flats             0  2022\n3 Hougang Defu Industrial Park 0_to_4 Males HDB 4-Room Flats             0  2022\n4 Hougang Defu Industrial Park 0_to_4 Males HDB 5-Room and Executiv…     0  2022\n5 Hougang Defu Industrial Park 0_to_4 Males HUDC Flats (excluding t…     0  2022\n6 Hougang Defu Industrial Park 0_to_4 Males Condominiums and Other …     0  2022\n\nfreq_pop_0 <- filter_pop_0 %>%\n  group_by(`AG`, `Sex`, `PA`) %>%\n  summarise('Count'= sum(`Pop`)) %>%\n  ungroup()\nhead(freq_pop_0)\n\n# A tibble: 6 × 4\n  AG       Sex     PA      Count\n  <chr>    <chr>   <chr>   <dbl>\n1 0_to_4   Females Hougang  4430\n2 0_to_4   Males   Hougang  4520\n3 10_to_14 Females Hougang  4920\n4 10_to_14 Males   Hougang  4910\n5 15_to_19 Females Hougang  5190\n6 15_to_19 Males   Hougang  5410\n\norder <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\nsorted_pop_0 <- freq_pop_0 %>%\n  mutate(AG =  factor(AG, levels = order)) %>%\n  arrange(AG)\n\nhead(sorted_pop_0)\n\n# A tibble: 6 × 4\n  AG       Sex     PA      Count\n  <fct>    <chr>   <chr>   <dbl>\n1 0_to_4   Females Hougang  4430\n2 0_to_4   Males   Hougang  4520\n3 5_to_9   Females Hougang  4960\n4 5_to_9   Males   Hougang  4880\n5 10_to_14 Females Hougang  4920\n6 10_to_14 Males   Hougang  4910\n\n\n\np0 <- ggplot(sorted_pop_0, aes(x = ifelse(Sex == \"Males\", yes = -Count, no = Count), y = AG, fill = Sex)) + geom_col() + scale_x_continuous(breaks = c(-10000, -5000, 0, 5000, 10000), labels = paste0(c(10, 5, 0, 5, 10),\"k\")) + labs (x = \"Population\", y = \"Age\", title='Hougang Age-Sex Population Pyramid 2022') +\n  theme_bw() + theme(plot.title = element_text(size=12,hjust=0.5)) +\n  theme(axis.ticks.y = element_blank()) + scale_fill_manual(values = c(\"Males\" = \"dodgerblue3\", \"Females\" = \"brown3\")) \np0"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#trellis-of-pyramids",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#trellis-of-pyramids",
    "title": "Take-home Exercise2",
    "section": "3.2 Trellis of Pyramids",
    "text": "3.2 Trellis of Pyramids\n\n3.2.1 Critic\nThe original trellis is listed blow. \nClarity:\n\nAdopt a 3*3 trellis, which leaves adequate space to show data in detail. Since the graph is not compressed in the horizon, the population distribution is clearly shown to the audience.\nToo much repetition of “Age-sex Pyramid” in the titles, and there is no need to present “Trellis Display” in the main title as the structure can be seen from the chart.\n\nAesthetics:\n\nY-axis are redundant and can be combined and put in the leftmost column.\nThe sizes of the bars are inconsistent (e.g. the bars of Hougang and Woodlands are thinner than others).\n\n\n\n3.2.2 Proposed Design\nA scratch of improved design is shown below to avoid redundancy in the trellis. \n\n\n3.2.3 Remake\nIn this part, steps will be given to show how to make an age-sex pyramid trellis by using RStudio.\nFilter out desired areas\nAs the csv.file has already been uploaded under the R environment and renamed as “pop”, the filter command is then adopted to filter out the needed areas. Here the areas include: Ang Mo Kio, Bedok, Bishan, Clementi, Downtown Core, Geylang, Outram, Hougang, and Woodlands. After selecting, this data set is renamed as “filter pop”.\n\nfilter_pop <- pop[which((pop$PA == 'Ang Mo Kio') | (pop$PA == 'Bedok') | (pop$PA == 'Bishan') | (pop$PA == 'Clementi') | (pop$PA == 'Downtown Core') | (pop$PA == 'Geylang') | (pop$PA == 'Outram') | (pop$PA == 'Hougang') | (pop$PA == 'Woodlands')),]\nhead(filter_pop)\n\n# A tibble: 6 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  <chr>      <chr>                  <chr>  <chr> <chr>               <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2022\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats       10  2022\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       10  2022\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    30  2022\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2022\n6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and O…    50  2022\n\n\nCompute the frequency count by age, sex, and areas\nBy using the group_by() and summarise () commands in dplyr package, the total population in Singapore in the categories of age, sex, and areas are counted.\n\nfreq_pop <- filter_pop %>%\n  group_by(`AG`, `Sex`, `PA`) %>%\n  summarise('Count'= sum(`Pop`)) %>%\n  ungroup()\nhead(freq_pop)\n\n# A tibble: 6 × 4\n  AG     Sex     PA            Count\n  <chr>  <chr>   <chr>         <dbl>\n1 0_to_4 Females Ang Mo Kio     2480\n2 0_to_4 Females Bedok          4970\n3 0_to_4 Females Bishan         1320\n4 0_to_4 Females Clementi       1740\n5 0_to_4 Females Downtown Core   100\n6 0_to_4 Females Geylang        1850\n\n\nSort age group\nSince sorting the data in age group by default could cause errors (e.g. 10_to_14 comes before 5_to_9), the sorting order of the original dataset is used by introducing arrange( ).\n\norder <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\nsorted_pop <- freq_pop %>%\n  mutate(AG =  factor(AG, levels = order)) %>%\n  arrange(AG)\n\nhead(sorted_pop)\n\n# A tibble: 6 × 4\n  AG     Sex     PA            Count\n  <fct>  <chr>   <chr>         <dbl>\n1 0_to_4 Females Ang Mo Kio     2480\n2 0_to_4 Females Bedok          4970\n3 0_to_4 Females Bishan         1320\n4 0_to_4 Females Clementi       1740\n5 0_to_4 Females Downtown Core   100\n6 0_to_4 Females Geylang        1850\n\n\nCreating trellis plot\nTo make the graphs of each area into 3*3 trellis, the facet_wrap() is used. As we want to split 9 graphs according to different regions, ~PA is put in. By adding nrow = 3 in the facet_wrap, each row is set to contain 3 age-sex pyramids.\n\np1 <- ggplot(sorted_pop, aes(x = ifelse(Sex == \"Males\", yes = -Count, no = Count), y = AG, fill = Sex)) + geom_col() + facet_wrap(~PA, nrow = 3) + scale_x_continuous(breaks = c(-10000, -5000, 0, 5000, 10000), labels = paste0(c(10, 5, 0, 5, 10),\"k\")) + labs (x = \"Population\", y = \"Age\", title='Singapore Age-Sex Population Pyramids in 9 Areas, 2022') +\n  theme_bw() + theme(plot.title = element_text(size=12,hjust=0.5)) +\n  theme(axis.ticks.y = element_blank()) + scale_fill_manual(values = c(\"Males\" = \"dodgerblue3\", \"Females\" = \"brown3\")) +\ngeom_col_interactive()\n\ngirafe(\n  ggobj = p1,\n  width_svg = 6,\n  height_svg = 7\n)\n\n\n\n\n\nAfter making the trellis, we can combine it with the age-sex pyramid of the whole Singapore in 2022 to compare the overall trend, and the final version is shown below:\n\nfreq_pop_1 <- pop %>%\n  group_by(`AG`, `Sex`) %>%\n  summarise('Count'= sum(`Pop`)) %>%\n  ungroup()\nhead(freq_pop_1)\n\n# A tibble: 6 × 3\n  AG       Sex      Count\n  <chr>    <chr>    <dbl>\n1 0_to_4   Females  87430\n2 0_to_4   Males    90930\n3 10_to_14 Females  99700\n4 10_to_14 Males   103230\n5 15_to_19 Females 101380\n6 15_to_19 Males   105590\n\norder <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\")\nsorted_pop_1 <- freq_pop_1 %>%\n  mutate(AG =  factor(AG, levels = order)) %>%\n  arrange(AG)\nhead(sorted_pop_1)\n\n# A tibble: 6 × 3\n  AG       Sex      Count\n  <fct>    <chr>    <dbl>\n1 0_to_4   Females  87430\n2 0_to_4   Males    90930\n3 5_to_9   Females  98250\n4 5_to_9   Males   103490\n5 10_to_14 Females  99700\n6 10_to_14 Males   103230\n\np2 <- ggplot(sorted_pop_1, aes(x = ifelse(Sex == \"Males\", yes = -Count, no = Count), \n                          y = AG, fill = Sex)) + \n  geom_col() +\n  scale_x_continuous(breaks = seq(-150000, 150000, 50000), \n                     labels = paste0(as.character(c(seq(150, 0, -50), seq(50, 150, 50))),\"k\")) +\n  labs (x = \"Population\", y = \"Age\", title='Singapore Age-Sex Population Pyramid 2022') +\n  theme_bw() +\n  theme(axis.ticks.y = element_blank()) +\n  scale_fill_manual(values = c(\"Males\" = \"skyblue3\", \"Females\" = \"brown\"))\n\n\ngirafe(\n  ggobj = p1/p2,\n  width_svg = 6,\n  height_svg = 12\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03.html",
    "title": "In-class Exercise",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages will be installed and loaded. They are: tidyverse and ggiraph\n\npacman::p_load(ggiraph, plotly, gganimate, DT, patchwork, tidyverse)\n\nimporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\")\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + scale_y_continuous(NULL,               \n                     breaks = NULL)            \n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(plotly, DT, patchwork, ggstatsplot, ggside, readxl, performance, parameters, see, tidyverse)\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nplot_ly(data = exam_data,\n        x = ~ENGLISH,\n        y = ~MATHS,\n        color = ~RACE)\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\nggplotly(p)\n\n\n\n\n\n\nggbetweenstats(data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n <- check_normality(model1)\nplot(check_n)\n\n\n\n\n\ncheck_h <- check_heteroscedasticity(model1)\nplot(check_h)\n\n\n\n\n\nmy_sum <- exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438 \n  \n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")"
  }
]
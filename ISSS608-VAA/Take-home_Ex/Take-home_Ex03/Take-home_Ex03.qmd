---
title: "Take-home Exercise03"
author: "Luo Zheng" 
date: "`r Sys.Date()`"
execute: 
  echo: true
  eval: true
  warning: false
format: html
---

```{r}
pacman::p_load(tidyverse, patchwork, ggthemes, hrbrthemes, ggrepel, dplyr, ggiraph, ggstatsplot, PMCMRplus, performance, parameters, see, plotly)
```

```{r}
resale <- read_csv("data/resale_price.csv")
head(resale)
```

```{r}
resale_filter <-
  resale %>% 
  filter(flat_type == c("5 ROOM", "3 ROOM", "4 ROOM")) %>% 
  filter(str_detect(month,"22")) 
head(resale_filter)
```

```{r}
resale_arrange <- 
  resale_filter %>% 
  separate(remaining_lease, into = c("remaining_lease"), sep = "years") %>% 
  transform(resale_price = resale_price/1000) %>% 
  separate(storey_range, into = c(NA, "storey"), sep = "TO ")
head(resale_arrange)
```

```{r}
resale_arrange$storey=as.numeric(resale_arrange$storey) 
head(resale_arrange)
```

```{r}
re <- resale_arrange %>% 
mutate(storey_bins = 
           cut(storey, 
               breaks = c(0,9,21,22,51))) %>% 
transform(unit_price = resale_price/floor_area_sqm)
head(re)
```

```{r}
model_floorarea <- lm(resale_price ~ floor_area_sqm, data = re)
model_floorarea
```

```{r}
check_model(model_floorarea)
```

```{r}
model_lease <- lm(resale_price ~ remaining_lease, data = re)
model_lease
```

```{r}
check_model(model_lease)
```

```{r}
ggbetweenstats(
  data = re,
  x = flat_type, 
  y = resale_price,
  type = "p",
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)
```

```{r}
ggbarstats(re, 
           x = storey_bins, 
           y = flat_type)
```

```{r}
plot_ly(data = re, 
        x = ~lease_commence_date, 
        y = ~unit_price, 
        color = ~storey_bins,
        text = ~paste("Town:", town,     
                      "<br>Model:", flat_model)) %>% 
  layout(title = "Relationship of Lease Commence Date with Unit Price", xaxis = list(title = "Lease Commence Date (year)"), yaxis = list(title = "Unit Price (K SGD)" ), legend = list(title=list(text="<b> Storey Bins </b>")))
```

```{r}
avg_price <- aggregate(re$unit_price, by = list(re$town), mean)
```

```{r}
avg_price$x=round(avg_price$x,2)
head(avg_price)
```

```{r}
p_avg_price <- ggplot(data = avg_price, mapping = aes(x = reorder(Group.1, -x), y = x, group = 1)) + geom_line(colour =  'steelblue', size = 2) + geom_point() + xlab('') + ylab("Unit Price (K SGD)") + theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) + labs(title = "Unit Price of Different Towns") + theme(plot.title = element_text(size=12,hjust=0.5)) + geom_point_interactive(aes(tooltip = x, data_id = x)) + scale_y_continuous(limits = c(3, 9))

girafe(ggobj = p_avg_price,
       width_svg = 6,
  height_svg = 6*0.618)
```

```{r}
model_resale <- lm(resale_price ~ floor_area_sqm + lease_commence_date + remaining_lease, data = re)
model_resale
```

```{r}
check_collinearity(model_resale)
```

```{r}
check_r <- check_collinearity(model_resale)
plot(check_r)
```

```{r}
model_resale_1 <- lm(resale_price ~ floor_area_sqm + remaining_lease, data = re)
check_r_1 <- check_normality(model_resale_1)
plot(check_r_1)
```


```{r}
ggbetweenstats(
  data = re,
  x = flat_type, 
  y = resale_price,
  type = "p",
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)
```

```{r}

ggscatterstats(
  data = re,
  x = remaining_lease,
  y = resale_price,
  marginal = FALSE,
  )
```
